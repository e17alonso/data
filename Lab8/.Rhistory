library(tidyverse)
library(highcharter)
install packages highcharter
install.packages(highcharter)
install.packages('highcharter')
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('2010-2019-.csv',
';', escape_double = FALSE, trim_ws = TRUE)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[nmes(df)=='top genre']
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(artist,year) %>%
head()
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
####cuantas canciones tenemos
df %>%
summarise(n=n_distinct(title))
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
####cuantas canciones tenemos
df %>%
summarise(n=n_distinct(title))
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
####cuantas canciones tenemos
df %>%
summarise(n=n_distinct(title))
####
df %>%
select(year,title) %>%
group_by(title) %>%
summarise(n=n()) %>%
filter(n>1)
####
df %>%
select(artist,year,title) %>%
group_by(artist) %>%
summarise(n=n_distinct(year)) %>%
summarise(x=n_distinct(title)) %>%
filter(n>1) %>%
filter(x>1)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
####cuantas canciones tenemos
df %>%
summarise(n=n_distinct(title))
####
df %>%
select(year,title) %>%
group_by(title) %>%
summarise(n=n()) %>%
filter(n>1)
####
df %>%
select(artist,year,title) %>%
group_by(artist) %>%
summarise(n=n_distinct(year)) && summarise(x=n_distinct(title)) %>%
filter(n>1) &&  filter(x>1)
library(tidyverse)
library(highcharter)
library(readr)
df = read_delim('clase5/2010-2019-top.csv',
';', escape_double = FALSE, trim_ws = TRUE)
View(df)
str(df)
glimpse(df)
rename(df,top_genre='top genre')
names(df)[names(df)=='top genre']
####
rename_with(df, ~(gsub(' ', '-',.x)))
####filtrar variables o columnas
head(select(df,artist,year))
df %>%
select(1,2) %>%
head()
####quiero todas las columans menos 1
df %>%
select(-X1)
####texto a factores
df = mutate_if(df, is.character, as.factor)
glimpse(df)
####artista titulo y año donde es 2010
df %>%
select(artist,title,year) %>%
filter(year==2010)
####cuantos artistas hay por año
df %>%
select (year, artist) %>%
group_by(year)%>%
summarise(artist=n())
####cuantos artistas tenemos
df %>%
summarise(n=n_distinct(artist))
####cuantas canciones tenemos
df %>%
summarise(n=n_distinct(title))
####
df %>%
select(year,title) %>%
group_by(title) %>%
summarise(n=n()) %>%
filter(n>1)
####
df %>%
select(artist,year,title) %>%
group_by(artist) %>%
summarise(n=n_distinct(year)) %>%
summarise(x=n_distinct(title)) %>%
filter(n>1) %>%
filter(x>1)
shiny::runApp('lab3_data_product')
install library(nycflights13)
install library('nycflights13')
library('nycflights13')
install.packages('nycflights13')
library(nycflights13)
library(dplyr)
library(lubridate)
today()
now()
x= '1994 October 27th'
ymd(x)
y='27.10.1994'
dmy(y)
x = 'oct, 27th 1994 14:00'
mdy_hm(z)
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40", tz="America/Los_Angeles")
# Variable que sea un Saros
saros <- 223
# Variable que sea un Synodic Month
synodic_month <- 29.53059
# Fecha del siguiente eclipse solar
fecha_eclipse_siguiente <- fecha_eclipse_historico + (saros * synodic_month)
# Imprimir fecha del siguiente eclipse solar
print(fecha_eclipse_siguiente)
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = days) +
as.difftime(12, units='hours') +
as.difftime(44, units='minutes') +
as.difftime(3, units='seconds')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours') +
as.difftime(44, units='minutes') +
as.difftime(3, units='seconds')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours') +
as.difftime(44, units="minutes") +
as.difftime(3, units='seconds')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours') +
as.difftime(3, units='seconds')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours')
# Fecha del siguiente eclipse solar
fecha_eclipse_siguiente <- fecha_eclipse_historico + (saros * synodic_month)
# Imprimir fecha del siguiente eclipse solar
print(fecha_eclipse_siguiente)
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- as.difftime(29, units = 'days') +
as.difftime(12, units='hours')+
as.difftime(44, units='minutes')
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
library(base)
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
library("chron")
install.packages('chron')
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- 223
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
# Fecha del siguiente eclipse solar
fecha_eclipse_siguiente <- fecha_eclipse_historico + (saros * synodic_month)
# Imprimir fecha del siguiente eclipse solar
print(fecha_eclipse_siguiente)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
# Fecha del siguiente eclipse solar
fecha_eclipse_siguiente <- fecha_eclipse_historico + (saros * synodic_month)
# Imprimir fecha del siguiente eclipse solar
print(fecha_eclipse_siguiente)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
time=saros*synodic_month
print(time)
print(synodic_month)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(29)+hours(12)+minutes(44)+seconds(3)
print(saros)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(as.integer(29)) + hours(as.integer(12)) + minutes(as.integer(44)) + seconds(as.integer(3))
print(synodic_month)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(29), hours(12), minutes(44), seconds(3)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- days(29) hours(12) minutes(44) seconds(3)
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- as.difftime(days(29) +hours(12)+ minutes(44) +seconds(3))
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- (days(29) +hours(12)+ minutes(44) +seconds(3))
library("chron")
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- (days(29) +hours(12)+ minutes(44) +seconds(3))
print(synodic_month)
library(chron)
# Fecha del eclipse histórico
fecha_eclipse_historico <- as.POSIXct("2017-08-21 18:26:40")
saros <- days(223)
synodic_month <- (days(29) +hours(12)+ minutes(44) +seconds(3))
print(synodic_month)
setwd("C:/Users/Alonso/Downloads/Lab8")
